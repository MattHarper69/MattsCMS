<?php// no direct access	defined('SITE_KEY') or die('File not found - <a href="/">please click here to return to the home page</a>');	define('TRANSACTION_TYPE_PURCHASE', 'PURCHASE');	define('TRANSACTION_TYPE_REFUND', 'REFUND');		$transactionType = TRANSACTION_TYPE_PURCHASE;		//	lock table while getting next invoice number	//	just to be sure....	$mysql_err_msg = 'Locking tables';	$sql_statement = 'LOCK TABLES used_invoice_number WRITE';	mysql_query (ReadDB ($sql_statement, $mysql_err_msg));		//	read from db to get the next invoice number	$mysql_err_msg = 'accesing next invoice num';		$sql_statement = 'INSERT INTO used_invoice_number SET used = "used"';				ReadDB ($sql_statement, $mysql_err_msg);	//	get order_id:	;	$invoice_num = mysql_insert_id();	$_SESSION['invoice_num'] = $invoice_num;		// unlock table	$mysql_err_msg = 'unlocking tables';	$sql_statement = 'UNLOCK TABLES';	mysql_query (ReadDB ($sql_statement, $mysql_err_msg));			echo '<br/>invoice_num->'.$invoice_num;	echo '<br/>CC_number->'.$CC_number = str_replace(' ', '', $CC_number);	//	strip spaces	echo '<br/>CC_expiry->'.$CC_expiry 	= $CC_exp_month . $CC_exp_year;		echo '<br/>total_amount->'.$total_amount = $grand_total_price;		//  convert to correct number format		echo '<br/>comment->'.$comment = $_SERVER['REMOTE_ADDR'] . ' @ ' . date("Y-m-d H:i:s");			// The Webpay PHP extension can be loaded at startup via PHP.ini or dynamically via the dl() function	// The follow code snippet checks to ensure the extension is loaded at startup if not it attempts to load it inline.    if(!extension_loaded("webpay"))	{		//Load library is a convenience method to load the webpay_php.so file		//from the current directory. If it doesn't work due to some php restrictions		//please change it back to dl(THE _WEBPAY_PHP_LIB)    	print "Loading Webpay Module<br>\n";	 	load_library(THE_WEBPAY_PHP_LIB);	 	//dl(THE_WEBPAY_PHP_LIB);	    }	print "<p> Starting webpay Transaction </p>\n";	//Create Webpay Transaction 	$webpayRef = newBundle();		if($webpayRef == NULL)	{		exit("There has been an initialisation problem. Please check error log.<br></html>\n");	}		 		put($webpayRef, "DEBUG", "OFF");	put($webpayRef, "LOGFILE", "webpay.log");	put_ClientID ($webpayRef, THE_CLIENT_ID);	put_CertificatePath ($webpayRef, THE_CERT_PATH);	put_CertificatePassword ($webpayRef, THE_CERT_PASSWORD);	setPort($webpayRef, THE_PORT);	setServers($webpayRef, THE_SERVER);		// Actual payment details	put($webpayRef, "CLIENTREF", $invoice_num);	put($webpayRef, "TOTALAMOUNT", $total_amount);	put($webpayRef, "CARDDATA", $CC_number);	put($webpayRef, "CARDEXPIRYDATE", $CC_expiry );		if (STG_API_GET_CC_CVN == 1)	{		put($webpayRef, "CVC2", $CC_CVN );	//	<<<----  can this be used ??		}	put($webpayRef, "INTERFACE", THE_INTERFACE);	put($webpayRef, "TRANSACTIONTYPE", $transactionType);	put($webpayRef, "COMMENT", $comment);		$tranProcessed = executeTransaction( $webpayRef );	if ($tranProcessed == "true") 	{		print "Successfully communicated with the WTS<br>\n";	} 	else 	{		print "Unable to communicate with the WTS<br>\n";				//Try transaction recovery		$transactionRef = get( $webpayRef, "TXNREFERENCE" );		if ($transactionRef)		{			//We have a transaction reference so attempt a status transaction.			print "Performing status check with Transaction Ref = [$transactionRef]<br>\n";						if(doStatusCheck($webpayRef)) 			{			   print "Status Check Successful - Details are displayed below.<br>\n";			} 			else 			{				print "Status check failed: Unknown transaction status.\nPlease wait a short while and try status check again using Transaction Ref [$transactionRef].<br>\n";			}		}		else		{			// There is no transaction reference number so the transaction has failed completely.			// It can be safely reprocessed.			print "The transaction can be safely reprocessed as no Transaction Reference Number exists.<br>\n";		}			}		//Check the result of the transaction.	displayResults($webpayRef);//echo approvedTransaction(get( $webpayRef, "RESPONSECODE"));	//	Transaction Approved	if (approvedTransaction(get( $webpayRef, "RESPONSECODE"))) 	{		echo '<br/>TXNREFERENCE->'.$_SESSION['txn_id']	= get( $webpayRef, "TXNREFERENCE");			//echo '<br/>total amount paid->'.$_SESSION['total_amount_payed']	= get( $webpayRef, "TXNREFERENCE");	 					echo '<br/>RESPONSECODE->'.$_SESSION['payment_status']	= get( $webpayRef, "RESPONSECODE");					header("location: modules/".SHOP_DB_NAME_PREFIX."/".SHOP_DB_NAME_PREFIX."_process_order.php" );		exit();				} 	//	Transaction NOT Approved	else	{		echo TAB_9.'<p class="WarningMSG" >Credit Card Transaction Failed</p>' . "\n";		echo TAB_9.'<p class="WarningMSG" >'. get( $webpayRef, "ERROR") . '.</p>' . "\n";		echo TAB_9.'<p class="WarningMSG" >please try again</p>' . "\n";		//	Log error to File and email 		require('stgeorge_txn_logError.php');			}	cleanup( $webpayRef );		/////////////////////////////////////////////////////////////////////////	///////						Functions below					/////////////	/////////////////////////////////////////////////////////////////////////	// Simple helper function for displaying table rowsfunction outTableRow($name, $value){	print "<tr><td>$name</td><td>$value</td></tr>";}	function doStatusCheck ($webpayRef) {		$txnRef = get( $webpayRef, "TXNREFERENCE");		if ($txnRef) {		//We have a transaction reference so attempt a status transaction.		put( $webpayRef, "TRANSACTIONTYPE", "STATUS" );		if (executeTransaction( $webpayRef ) == "true"){			return true;		}else{			return false;					}			} else {		// No txnref number so we can not do a status check.		return false;	}}function displayResults($webpayRef){	$txnRef = get( $webpayRef, "TXNREFERENCE");	$result = get( $webpayRef, "RESULT");	$authCode = get( $webpayRef, "AUTHCODE");	$responseText = get( $webpayRef, "RESPONSETEXT");	$responseCode = get( $webpayRef, "RESPONSECODE");	$responseErr = get( $webpayRef, "ERROR");	if (approvedTransaction($responseCode)) 	{		print ("<b>TRANSACTION APPROVED</b>");	} 		else 	{		print ("<b>TRANSACTION NOT APPROVED</b>");	}		print "<table border='1'>";	outTableRow("Transaction Reference", $txnRef);	outTableRow("Result", $result);	outTableRow("Auth Code", $authCode);	outTableRow("Response Text", $responseText);	outTableRow("Response Code", $responseCode);	outTableRow("Error MSG", $responseErr);	print "</table>";	}function approvedTransaction($responseCode) {	//	// Check the returned response Code against the list of known Approved Response Codes	//	// Please check the documentation to ensure that you have the 	// latest list of approved response codes.	//	if ($responseCode)	{		$ARRAY_SIZE = 3;		$listOfApprovedResponseCodes[0] = "00"; //Transaction Approved		$listOfApprovedResponseCodes[1] = "08"; //Approved Signature		$listOfApprovedResponseCodes[2] = "77"; //Approved Signature		for($i = 0; $i < $ARRAY_SIZE; $i++)		{			if( $responseCode == $listOfApprovedResponseCodes[$i]){				//Found it. Return true to indicate approved transaction.				return true;			}		}	}	return false;}/// the following is not needed if the module is pre-loaded in PHPfunction load_library( $extensionFile ) {	//make sure that we are ABLE to load libraries	if( !(bool)ini_get( "enable_dl" ) ) {		exit( "enable_dl is set to false. Cannot dynamically load webpay_php.so.\n" );	}	if( (bool)ini_get( "safe_mode" ) ) {		exit( "safe mode is set to true. Cannot dynamically load webpay_php.so.\n" );	}	//check to make sure the file exists	if( !file_exists( $extensionFile ) ) {		exit( "webpay_php does not exist: [$extensionFile].\n" );	}	//check the file permissions	if( !is_executable( $extensionFile ) ) {		exit( "Cannot execute webpay_php.so [$extensionFile}.\n" );	}	//we figure out the path	$currentDir = getcwd() . "/";	$currentExtPath = ini_get( "extension_dir" );	$subDirs = preg_match_all( "/\//" , $currentExtPath , $matches );	unset( $matches );	//lets make sure we extracted a valid extension path	if( !(bool)$subDirs ) {		exit( "Could not determine a valid extension path [extension_dir].\n" );	}	$extPathLastChar = strlen( $currentExtPath ) - 1;	if( $extPathLastChar == strrpos( $currentExtPath , "/" ) ) {		$subDirs--;	}	$backDirStr = "";	for( $i = 1; $i <= $subDirs; $i++ ) {		$backDirStr .= "..";		if( $i != $subDirs ) {			$backDirStr .= "/";		}	}	//construct the final path to load	$finalExtPath = $backDirStr . $currentDir . $extensionFile;	//now we execute dl() to actually load the module	if( !dl( $finalExtPath ) ) {		exit("Couldn't dynamically load webpay_php extention: [$finalExtPath]");	}	//if the module was loaded correctly, we must bow grab the module name	$loadedExtensions = get_loaded_extensions();	$thisExtName = $loadedExtensions[ sizeof( $loadedExtensions ) - 1 ];	//lastly, we return the extension name	return $thisExtName;}			?>